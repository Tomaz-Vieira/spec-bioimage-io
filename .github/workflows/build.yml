name: Test and Deploy bioimageio.spec

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ "**" ]

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check files using the black formatter
        uses: rickstaa/action-black@v1
        id: action_black
        with:
          black_args: "."
      - name: Annotate diff changes using reviewdog
        if: steps.action_black.outputs.is_formatted == 'true'
        uses: reviewdog/action-suggester@v1
        with:
          tool_name: blackfmt

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions mypy
    - name: Test with tox
      run: tox
    - name: Check passthrough models
      run: python scripts/generate_passthrough_modules.py check
    - name: Mypy
      if: ${{ matrix.python-version != '3.7' }}
      run: |
        mkdir -p .mypy-cache
        mypy . --install-types --non-interactive --cache-dir .mypy-cache --explicit-package-bases --check-untyped-defs

  conda-build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: setup conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        auto-activate-base: true
        activate-environment: ""
    - name: linux conda build
      shell: bash -l {0}
      run: |
        conda install -n base -c conda-forge conda-build pip -y
        conda build -c conda-forge conda-recipe

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        pip install .
    - name: Generate Docs
      run: python scripts/generate_rdf_docs.py
    - name: Generate pre-/postprocessing docs
      run: python scripts/generate_processing_docs.py
    - name: Generate weight formats docs
      run: python scripts/generate_weight_formats_docs.py
    - name: Generate JSON Schema
      run: python scripts/generate_json_specs.py
    - name: Generate weight formats overview
      run: python scripts/generate_weight_formats_overview.py generate
    - name: Get branch name to deploy to
      id: get_branch
      shell: bash
      run: |
        if [[ -n '${{ github.event.pull_request.head.ref }}' ]]; then branch=gh-pages-${{ github.event.pull_request.head.ref }}; else branch=gh-pages; fi
        echo "::set-output name=branch::$branch"
    - name: Deploy to ${{ steps.get_branch.outputs.branch }} ðŸš€
      uses: JamesIves/github-pages-deploy-action@4.1.4
      with:
        branch: ${{ steps.get_branch.outputs.branch }}
        folder: dist
