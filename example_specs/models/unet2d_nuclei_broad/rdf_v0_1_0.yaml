format_version: 0.1.0

name: UNet 2D Nuclei Broad
description: A 2d U-Net trained on the nuclei broad dataset.
authors:
  - "Constantin Pape;@bioimage-io"
  - "Fynn Beuttenmueller"

# we allow for multiple citations. Each citation contains TEXT, DOI and URL. One of DOI or URL needs to be given.
cite:
  - text: "Ronneberger, Olaf et al. U-net: Convolutional networks for biomedical image segmentation. MICCAI 2015."
    doi: https://doi.org/10.1007/978-3-319-24574-4_28
  - text: "2018 Data Science Bowl"
    url: https://www.kaggle.com/c/data-science-bowl-2018

tags: [unet2d, pytorch, nucleus, segmentation, dsb2018]
license: MIT

documentation: README.md
covers: [cover0.png]

inputs:
  - name: raw
    axes: bcyx  # letters of axes in btczyx
    data_type: float32
    data_range: [-.inf, .inf]
    shape: [1, 1, 512, 512]

outputs:
  - name: probability
    axes: bcyx
    data_type: float32
    data_range: [-.inf, .inf]
    halo: [0, 0, 32, 32]
    shape:
      reference_input: raw
      scale: [1.0, 1.0, 1.0, 1.0]
      offset: [0.0, 0.0, 0.0, 0.0]

language: python
framework: pytorch
source: unet2d.py:UNet2d
hash: {sha256: cf42a6d86adeb4eb6e8e37b539a20e5413866b183bed88f4e2e26ad1639761ed}
optional_kwargs: {input_channels: 1, output_channels: 1}

test_input: test_input.npy
test_output: test_output.npy

prediction:
  dependencies: conda:environment.yaml
  weights:
     source: https://zenodo.org/record/3446812/files/unet2d_weights.torch
     hash: {sha256: e4d3885bccbe41cbf6c1d825f3cd2b707c7021ead5593156007e407a16b27cf2}

config:
  future:
    0.3.0:
      version: 0.1.3
      sample_inputs: [test_input.npy]
      sample_outputs: [test_output.npy]
      attachments: {}
      git_repo: https://github.com/bioimage-io/spec-bioimage-io/tree/main/example_specs/models/unet2d_nuclei_broad
      inputs:
        - description: raw input
          preprocessing:  # list of preprocessing steps
          - name: zero_mean_unit_variance  # name of preprocessing step
            kwargs:
              mode: per_sample      # mode in [fixed, per_dataset, per_sample]
              axes: yx              # subset of axes to normalize jointly, batch ('b') is not a valid axis key here!
      outputs:
        - description: probability in [0,1]
      weights_format: "pytorch_state_dict"
      weights:
        authors:
          - "Constantin Pape;@bioimage-io"

      additional_weights:
        onnx:
          sha256: 5bf14c4e65e8601ab551db99409ba7981ff0e501719bc2b0ee625ca9a9375b32
          source: ./weights.onnx
          opset_version: 12
          parent: https://zenodo.org/record/3446812/files/unet2d_weights.torch
        pytorch_script:
          sha256: 62fa1c39923bee7d58a192277e0dd58f2da9ee810662addadd0f44a3784d9210
          source: ./weights.pt
          parent: https://zenodo.org/record/3446812/files/unet2d_weights.torch
      timestamp: 2019-12-11T12:22:32Z  # ISO 8601

    0.3.2:
      authors:
        - affiliation: "EMBL Heidelberg"
          orcid: "0000-0001-6562-7187"
        - affiliation: "EMBL Heidelberg"
          orcid: "0000-0002-8567-6389"

      weights:
        pytorch_state_dict:
          authors:
            - affiliation: "EMBL Heidelberg"
              orcid: "0000-0001-6562-7187"
